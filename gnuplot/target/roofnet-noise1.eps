%!PS-Adobe-2.0 EPSF-2.0
%%Title: roofnet-noise1.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri Jun 24 17:50:13 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 338 150
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (roofnet-noise1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Bhaskaran Raman,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jun 24 17:50:13 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
854 448 M
63 0 V
4633 0 R
-63 0 V
770 448 M
(-100) Rshow
1.000 UL
LTb
854 681 M
63 0 V
4633 0 R
-63 0 V
770 681 M
(-95) Rshow
1.000 UL
LTb
854 915 M
63 0 V
4633 0 R
-63 0 V
770 915 M
(-90) Rshow
1.000 UL
LTb
854 1148 M
63 0 V
4633 0 R
-63 0 V
-4717 0 R
(-85) Rshow
1.000 UL
LTb
854 1381 M
63 0 V
4633 0 R
-63 0 V
-4717 0 R
(-80) Rshow
1.000 UL
LTb
854 1615 M
63 0 V
4633 0 R
-63 0 V
-4717 0 R
(-75) Rshow
1.000 UL
LTb
854 1848 M
63 0 V
4633 0 R
-63 0 V
-4717 0 R
(-70) Rshow
1.000 UL
LTb
854 448 M
0 63 V
0 1337 R
0 -63 V
854 308 M
( 0) Cshow
1.000 UL
LTb
1525 448 M
0 63 V
0 1337 R
0 -63 V
0 -1477 R
( 10) Cshow
1.000 UL
LTb
2196 448 M
0 63 V
0 1337 R
0 -63 V
0 -1477 R
( 20) Cshow
1.000 UL
LTb
2867 448 M
0 63 V
0 1337 R
0 -63 V
0 -1477 R
( 30) Cshow
1.000 UL
LTb
3537 448 M
0 63 V
0 1337 R
0 -63 V
0 -1477 R
( 40) Cshow
1.000 UL
LTb
4208 448 M
0 63 V
0 1337 R
0 -63 V
0 -1477 R
( 50) Cshow
1.000 UL
LTb
4879 448 M
0 63 V
0 1337 R
0 -63 V
0 -1477 R
( 60) Cshow
1.000 UL
LTb
5550 448 M
0 63 V
0 1337 R
0 -63 V
0 -1477 R
( 70) Cshow
1.000 UL
LTb
1.000 UL
LTb
854 1848 N
854 448 L
4696 0 V
0 1400 V
-4696 0 V
Z stroke
LCb setrgbcolor
280 1148 M
currentpoint gsave translate 90 rotate 0 0 M
(Silence level \(dBm\)) Cshow
grestore
LTb
LCb setrgbcolor
3202 98 M
(Transmitter-Receiver pair num.) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
3.000 UL
LT0
LTb
4044 1708 M
(5%-ile) Rshow
LT0
4128 1708 M
399 0 V
854 448 M
67 93 V
67 0 V
67 94 V
67 0 V
67 0 V
68 46 V
67 0 V
67 -46 V
67 46 V
67 -93 V
67 93 V
67 0 V
67 47 V
67 0 V
67 -140 V
67 -47 V
67 140 V
68 0 V
67 47 V
67 47 V
67 0 V
67 -47 V
67 -93 V
67 140 V
67 -187 V
67 140 V
67 0 V
67 47 V
67 46 V
68 0 V
67 0 V
67 -93 V
67 47 V
67 46 V
67 0 V
67 47 V
67 0 V
67 0 V
67 0 V
67 0 V
68 0 V
67 0 V
67 -47 V
67 0 V
67 0 V
67 47 V
67 -47 V
67 47 V
67 0 V
67 0 V
67 -47 V
67 94 V
68 -47 V
67 0 V
67 0 V
67 0 V
67 0 V
67 47 V
67 46 V
67 -46 V
67 0 V
67 186 V
67 -233 V
854 448 Pls
921 541 Pls
988 541 Pls
1055 635 Pls
1122 635 Pls
1189 635 Pls
1257 681 Pls
1324 681 Pls
1391 635 Pls
1458 681 Pls
1525 588 Pls
1592 681 Pls
1659 681 Pls
1726 728 Pls
1793 728 Pls
1860 588 Pls
1927 541 Pls
1994 681 Pls
2062 681 Pls
2129 728 Pls
2196 775 Pls
2263 775 Pls
2330 728 Pls
2397 635 Pls
2464 775 Pls
2531 588 Pls
2598 728 Pls
2665 728 Pls
2732 775 Pls
2799 821 Pls
2867 821 Pls
2934 821 Pls
3001 728 Pls
3068 775 Pls
3135 821 Pls
3202 821 Pls
3269 868 Pls
3336 868 Pls
3403 868 Pls
3470 868 Pls
3537 868 Pls
3605 868 Pls
3672 868 Pls
3739 821 Pls
3806 821 Pls
3873 821 Pls
3940 868 Pls
4007 821 Pls
4074 868 Pls
4141 868 Pls
4208 868 Pls
4275 821 Pls
4342 915 Pls
4410 868 Pls
4477 868 Pls
4544 868 Pls
4611 868 Pls
4678 868 Pls
4745 915 Pls
4812 961 Pls
4879 915 Pls
4946 915 Pls
5013 1101 Pls
5080 868 Pls
4327 1708 Pls
1.000 UP
3.000 UL
LT2
LTb
4044 1568 M
(Median \(50%-ile\)) Rshow
LT2
4128 1568 M
399 0 V
854 448 M
67 187 V
67 0 V
67 46 V
67 0 V
67 0 V
68 47 V
67 0 V
67 0 V
67 0 V
67 47 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
68 0 V
67 0 V
67 46 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 47 V
68 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 47 V
67 0 V
67 0 V
67 0 V
67 0 V
68 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 46 V
68 0 V
67 0 V
67 0 V
67 0 V
67 0 V
67 47 V
67 0 V
67 0 V
67 93 V
67 47 V
67 233 V
854 448 TriUF
921 635 TriUF
988 635 TriUF
1055 681 TriUF
1122 681 TriUF
1189 681 TriUF
1257 728 TriUF
1324 728 TriUF
1391 728 TriUF
1458 728 TriUF
1525 775 TriUF
1592 775 TriUF
1659 775 TriUF
1726 775 TriUF
1793 775 TriUF
1860 775 TriUF
1927 775 TriUF
1994 775 TriUF
2062 775 TriUF
2129 775 TriUF
2196 821 TriUF
2263 821 TriUF
2330 821 TriUF
2397 821 TriUF
2464 821 TriUF
2531 821 TriUF
2598 821 TriUF
2665 821 TriUF
2732 821 TriUF
2799 868 TriUF
2867 868 TriUF
2934 868 TriUF
3001 868 TriUF
3068 868 TriUF
3135 868 TriUF
3202 868 TriUF
3269 915 TriUF
3336 915 TriUF
3403 915 TriUF
3470 915 TriUF
3537 915 TriUF
3605 915 TriUF
3672 915 TriUF
3739 915 TriUF
3806 915 TriUF
3873 915 TriUF
3940 915 TriUF
4007 915 TriUF
4074 915 TriUF
4141 915 TriUF
4208 915 TriUF
4275 915 TriUF
4342 961 TriUF
4410 961 TriUF
4477 961 TriUF
4544 961 TriUF
4611 961 TriUF
4678 961 TriUF
4745 1008 TriUF
4812 1008 TriUF
4879 1008 TriUF
4946 1101 TriUF
5013 1148 TriUF
5080 1381 TriUF
4327 1568 TriUF
1.000 UP
3.000 UL
LT6
LTb
4044 1428 M
(95%-ile) Rshow
LT6
4128 1428 M
399 0 V
854 495 M
67 326 V
67 0 V
67 0 V
67 94 V
67 0 V
68 46 V
67 -46 V
67 140 V
67 -47 V
67 233 V
67 -140 V
67 47 V
67 -140 V
67 0 V
67 467 V
67 -234 V
67 -140 V
68 -46 V
67 -47 V
67 47 V
67 0 V
67 0 V
67 373 V
67 -373 V
67 280 V
67 -280 V
67 0 V
67 0 V
67 93 V
68 0 V
67 -47 V
67 47 V
67 -93 V
67 140 V
67 -94 V
67 47 V
67 0 V
67 0 V
67 0 V
67 0 V
68 47 V
67 -47 V
67 93 V
67 -46 V
67 0 V
67 -47 V
67 47 V
67 -94 V
67 -46 V
67 140 V
67 0 V
67 0 V
68 0 V
67 46 V
67 -93 V
67 140 V
67 -47 V
67 -46 V
67 0 V
67 46 V
67 140 V
67 -46 V
67 280 V
854 495 Crs
921 821 Crs
988 821 Crs
1055 821 Crs
1122 915 Crs
1189 915 Crs
1257 961 Crs
1324 915 Crs
1391 1055 Crs
1458 1008 Crs
1525 1241 Crs
1592 1101 Crs
1659 1148 Crs
1726 1008 Crs
1793 1008 Crs
1860 1475 Crs
1927 1241 Crs
1994 1101 Crs
2062 1055 Crs
2129 1008 Crs
2196 1055 Crs
2263 1055 Crs
2330 1055 Crs
2397 1428 Crs
2464 1055 Crs
2531 1335 Crs
2598 1055 Crs
2665 1055 Crs
2732 1055 Crs
2799 1148 Crs
2867 1148 Crs
2934 1101 Crs
3001 1148 Crs
3068 1055 Crs
3135 1195 Crs
3202 1101 Crs
3269 1148 Crs
3336 1148 Crs
3403 1148 Crs
3470 1148 Crs
3537 1148 Crs
3605 1195 Crs
3672 1148 Crs
3739 1241 Crs
3806 1195 Crs
3873 1195 Crs
3940 1148 Crs
4007 1195 Crs
4074 1101 Crs
4141 1055 Crs
4208 1195 Crs
4275 1195 Crs
4342 1195 Crs
4410 1195 Crs
4477 1241 Crs
4544 1148 Crs
4611 1288 Crs
4678 1241 Crs
4745 1195 Crs
4812 1195 Crs
4879 1241 Crs
4946 1381 Crs
5013 1335 Crs
5080 1615 Crs
4327 1428 Crs
1.000 UL
LTb
854 1848 N
854 448 L
4696 0 V
0 1400 V
-4696 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
