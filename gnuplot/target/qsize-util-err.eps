%!PS-Adobe-2.0 EPSF-2.0
%%Title: qsize-util-err.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri Jun 24 17:50:13 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 338 251
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (qsize-util-err.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Bhaskaran Raman,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jun 24 17:50:13 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
770 448 M
4136 0 V
stroke
LTb
770 448 M
63 0 V
4073 0 R
-63 0 V
686 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 875 M
2270 0 V
1659 0 R
207 0 V
stroke
LTb
770 875 M
31 0 V
4105 0 R
-31 0 V
stroke
LTa
770 1302 M
2270 0 V
1659 0 R
207 0 V
stroke
LTb
770 1302 M
63 0 V
4073 0 R
-63 0 V
-4157 0 R
( 5) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 1729 M
2270 0 V
1659 0 R
207 0 V
stroke
LTb
770 1729 M
31 0 V
4105 0 R
-31 0 V
stroke
LTa
770 2156 M
4136 0 V
stroke
LTb
770 2156 M
63 0 V
4073 0 R
-63 0 V
-4157 0 R
( 10) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 2583 M
4136 0 V
stroke
LTb
770 2583 M
31 0 V
4105 0 R
-31 0 V
stroke
LTa
770 3010 M
4136 0 V
stroke
LTb
770 3010 M
63 0 V
4073 0 R
-63 0 V
-4157 0 R
( 15) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 3437 M
4136 0 V
stroke
LTb
770 3437 M
31 0 V
4105 0 R
-31 0 V
stroke
LTa
770 3864 M
4136 0 V
stroke
LTb
770 3864 M
63 0 V
4073 0 R
-63 0 V
-4157 0 R
( 20) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 448 M
0 3416 V
stroke
LTb
770 448 M
0 63 V
0 3353 R
0 -63 V
770 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1287 448 M
0 3416 V
stroke
LTb
1287 448 M
0 31 V
0 3385 R
0 -31 V
stroke
LTa
1804 448 M
0 3416 V
stroke
LTb
1804 448 M
0 63 V
0 3353 R
0 -63 V
0 -3493 R
( 5) Cshow
1.000 UL
LTb
1.000 UL
LTa
2321 448 M
0 3416 V
stroke
LTb
2321 448 M
0 31 V
0 3385 R
0 -31 V
stroke
LTa
2838 448 M
0 3416 V
stroke
LTb
2838 448 M
0 63 V
0 3353 R
0 -63 V
0 -3493 R
( 10) Cshow
1.000 UL
LTb
1.000 UL
LTa
3355 448 M
0 417 V
0 1120 R
0 1879 V
stroke
LTb
3355 448 M
0 31 V
0 3385 R
0 -31 V
stroke
LTa
3872 448 M
0 417 V
0 1120 R
0 1879 V
stroke
LTb
3872 448 M
0 63 V
0 3353 R
0 -63 V
0 -3493 R
( 15) Cshow
1.000 UL
LTb
1.000 UL
LTa
4389 448 M
0 417 V
0 1120 R
0 1879 V
stroke
LTb
4389 448 M
0 31 V
0 3385 R
0 -31 V
stroke
LTa
4906 448 M
0 3416 V
stroke
LTb
4906 448 M
0 63 V
0 3353 R
0 -63 V
0 -3493 R
( 20) Cshow
1.000 UL
LTb
4906 448 M
-63 0 V
147 0 R
( 60) Lshow
1.000 UL
LTb
4906 875 M
-63 0 V
147 0 R
( 65) Lshow
1.000 UL
LTb
4906 1302 M
-63 0 V
147 0 R
( 70) Lshow
1.000 UL
LTb
4906 1729 M
-63 0 V
147 0 R
( 75) Lshow
1.000 UL
LTb
4906 2156 M
-63 0 V
147 0 R
( 80) Lshow
1.000 UL
LTb
4906 2583 M
-63 0 V
147 0 R
( 85) Lshow
1.000 UL
LTb
4906 3010 M
-63 0 V
147 0 R
( 90) Lshow
1.000 UL
LTb
4906 3437 M
-63 0 V
147 0 R
( 95) Lshow
1.000 UL
LTb
4906 3864 M
-63 0 V
147 0 R
( 100) Lshow
1.000 UL
LTb
1.000 UL
LTb
770 3864 N
770 448 L
4136 0 V
0 3416 V
-4136 0 V
Z stroke
LCb setrgbcolor
280 2156 M
currentpoint gsave translate 90 rotate 0 0 M
(Queue Overflow \(%\)) Cshow
grestore
LTb
LCb setrgbcolor
5479 2156 M
currentpoint gsave translate 90 rotate 0 0 M
(Utilization \(%\)) Cshow
grestore
LTb
LCb setrgbcolor
2838 98 M
(Queue Size) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
3.000 UL
LT2
LTb
4132 1915 M
(QO: Err 01%) Rshow
LT2
4216 1915 M
399 0 V
770 615 M
977 532 L
207 -28 V
206 -14 V
207 -8 V
207 -6 V
207 -4 V
207 -3 V
206 -2 V
207 -2 V
207 -2 V
207 -1 V
207 -1 V
206 -1 V
207 -1 V
207 0 V
207 -1 V
207 -1 V
206 0 V
207 -1 V
207 0 V
770 615 BoxF
977 532 BoxF
1184 504 BoxF
1390 490 BoxF
1597 482 BoxF
1804 476 BoxF
2011 472 BoxF
2218 469 BoxF
2424 467 BoxF
2631 465 BoxF
2838 463 BoxF
3045 462 BoxF
3252 461 BoxF
3458 460 BoxF
3665 459 BoxF
3872 459 BoxF
4079 458 BoxF
4286 457 BoxF
4492 457 BoxF
4699 456 BoxF
4906 456 BoxF
4415 1915 BoxF
1.000 UP
3.000 UL
LT2
LTb
4132 1775 M
(QO: Err 05%) Rshow
LT2
4216 1775 M
399 0 V
770 1221 M
977 844 L
1184 714 L
206 -66 V
207 -39 V
207 -27 V
207 -19 V
207 -14 V
206 -11 V
207 -9 V
207 -8 V
207 -6 V
207 -5 V
206 -4 V
207 -4 V
207 -3 V
207 -3 V
207 -3 V
206 -2 V
207 -3 V
207 -1 V
770 1221 TriUF
977 844 TriUF
1184 714 TriUF
1390 648 TriUF
1597 609 TriUF
1804 582 TriUF
2011 563 TriUF
2218 549 TriUF
2424 538 TriUF
2631 529 TriUF
2838 521 TriUF
3045 515 TriUF
3252 510 TriUF
3458 506 TriUF
3665 502 TriUF
3872 499 TriUF
4079 496 TriUF
4286 493 TriUF
4492 491 TriUF
4699 488 TriUF
4906 487 TriUF
4415 1775 TriUF
1.000 UP
3.000 UL
LT2
LTb
4132 1635 M
(QO: Err 10%) Rshow
LT2
4216 1635 M
399 0 V
770 1845 M
977 1180 L
1184 944 L
1390 823 L
207 -74 V
207 -49 V
207 -35 V
207 -27 V
206 -21 V
207 -17 V
207 -14 V
207 -11 V
207 -10 V
206 -8 V
207 -7 V
207 -7 V
207 -5 V
207 -5 V
206 -5 V
207 -4 V
207 -3 V
770 1845 CircleF
977 1180 CircleF
1184 944 CircleF
1390 823 CircleF
1597 749 CircleF
1804 700 CircleF
2011 665 CircleF
2218 638 CircleF
2424 617 CircleF
2631 600 CircleF
2838 586 CircleF
3045 575 CircleF
3252 565 CircleF
3458 557 CircleF
3665 550 CircleF
3872 543 CircleF
4079 538 CircleF
4286 533 CircleF
4492 528 CircleF
4699 524 CircleF
4906 521 CircleF
4415 1635 CircleF
1.000 UP
3.000 UL
LT2
LTb
4132 1495 M
(QO: Err 20%) Rshow
LT2
4216 1495 M
399 0 V
770 2725 M
977 1690 L
207 -388 V
206 -203 V
1597 974 L
207 -85 V
207 -61 V
207 -47 V
206 -36 V
207 -29 V
207 -24 V
207 -20 V
207 -17 V
206 -15 V
207 -12 V
207 -11 V
207 -10 V
207 -9 V
206 -8 V
207 -7 V
207 -6 V
770 2725 Star
977 1690 Star
1184 1302 Star
1390 1099 Star
1597 974 Star
1804 889 Star
2011 828 Star
2218 781 Star
2424 745 Star
2631 716 Star
2838 692 Star
3045 672 Star
3252 655 Star
3458 640 Star
3665 628 Star
3872 617 Star
4079 607 Star
4286 598 Star
4492 590 Star
4699 583 Star
4906 577 Star
4415 1495 Star
1.000 UP
3.000 UL
LT0
LTb
4132 1355 M
(Util: Err 01%) Rshow
LT0
4216 1355 M
399 0 V
770 3695 M
207 42 V
207 14 V
206 7 V
207 4 V
207 3 V
207 2 V
207 1 V
206 1 V
207 1 V
207 1 V
207 1 V
207 0 V
206 1 V
207 0 V
207 0 V
207 1 V
207 0 V
206 0 V
207 0 V
207 1 V
770 3695 Box
977 3737 Box
1184 3751 Box
1390 3758 Box
1597 3762 Box
1804 3765 Box
2011 3767 Box
2218 3768 Box
2424 3769 Box
2631 3770 Box
2838 3771 Box
3045 3772 Box
3252 3772 Box
3458 3773 Box
3665 3773 Box
3872 3773 Box
4079 3774 Box
4286 3774 Box
4492 3774 Box
4699 3774 Box
4906 3775 Box
4415 1355 Box
1.000 UP
3.000 UL
LT0
LTb
4132 1215 M
(Util: Err 05%) Rshow
LT0
4216 1215 M
399 0 V
770 3051 M
207 188 V
207 65 V
206 33 V
207 20 V
207 13 V
207 9 V
207 8 V
206 5 V
207 5 V
207 3 V
207 3 V
207 3 V
206 2 V
207 2 V
207 2 V
207 1 V
207 2 V
206 1 V
207 1 V
207 1 V
770 3051 TriU
977 3239 TriU
1184 3304 TriU
1390 3337 TriU
1597 3357 TriU
1804 3370 TriU
2011 3379 TriU
2218 3387 TriU
2424 3392 TriU
2631 3397 TriU
2838 3400 TriU
3045 3403 TriU
3252 3406 TriU
3458 3408 TriU
3665 3410 TriU
3872 3412 TriU
4079 3413 TriU
4286 3415 TriU
4492 3416 TriU
4699 3417 TriU
4906 3418 TriU
4415 1215 TriU
1.000 UP
3.000 UL
LT0
LTb
4132 1075 M
(Util: Err 10%) Rshow
LT0
4216 1075 M
399 0 V
770 2311 M
207 333 V
207 118 V
206 61 V
207 36 V
207 25 V
207 18 V
207 13 V
206 11 V
207 8 V
207 7 V
207 5 V
207 5 V
206 4 V
207 4 V
207 3 V
207 3 V
207 3 V
206 2 V
207 2 V
207 2 V
770 2311 Circle
977 2644 Circle
1184 2762 Circle
1390 2823 Circle
1597 2859 Circle
1804 2884 Circle
2011 2902 Circle
2218 2915 Circle
2424 2926 Circle
2631 2934 Circle
2838 2941 Circle
3045 2946 Circle
3252 2951 Circle
3458 2955 Circle
3665 2959 Circle
3872 2962 Circle
4079 2965 Circle
4286 2968 Circle
4492 2970 Circle
4699 2972 Circle
4906 2974 Circle
4415 1075 Circle
1.000 UP
3.000 UL
LT0
LTb
4132 935 M
(Util: Err 20%) Rshow
LT0
4216 935 M
399 0 V
770 1017 M
207 518 V
207 194 V
206 102 V
207 62 V
207 43 V
207 30 V
207 23 V
206 18 V
207 15 V
207 12 V
207 10 V
207 8 V
206 8 V
207 6 V
207 6 V
207 5 V
207 4 V
206 4 V
207 3 V
207 4 V
770 1017 Crs
977 1535 Crs
1184 1729 Crs
1390 1831 Crs
1597 1893 Crs
1804 1936 Crs
2011 1966 Crs
2218 1989 Crs
2424 2007 Crs
2631 2022 Crs
2838 2034 Crs
3045 2044 Crs
3252 2052 Crs
3458 2060 Crs
3665 2066 Crs
3872 2072 Crs
4079 2077 Crs
4286 2081 Crs
4492 2085 Crs
4699 2088 Crs
4906 2092 Crs
4415 935 Crs
1.000 UL
LTb
770 3864 N
770 448 L
4136 0 V
0 3416 V
-4136 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
